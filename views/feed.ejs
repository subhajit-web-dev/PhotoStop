<% include ./partials/header.ejs %>
    <div class="w-full min-h-full bg-zinc-800 pt-1 text-white">
        <% include ./partials/nav.ejs %>
            <div class="w-full h-full px-11 py-8">
                <div class="container">
                    <% posts.forEach(function(post){ %>
                        <div class="box">
                            <a href="/images/uploads/<%= post.image %>" data-lightbox="posts" data-title="<%= post.description %>">
                                <img src="/images/uploads/<%= post.image %>" alt="image">
                            </a>
                            <div class="flex justify-between">
                                <div>
                                    <p class="text-base w-44 tracking-wider overflow-hidden font-semibold mt-3"><%= post.title %></p>
                                    <p class="text-sm w-44 font-medium opacity-80 text-wrap overflow-hidden">by: <%= post.user.username %></p>
                                </div>
                                <div class="like">
                                    <% if(post.likedUsers.includes(user._id)){ %>
                                        <i onclick="like('<%= post._id %>', '<%= user._id %>')" id="like-<%= post._id %>" class="fas fa-regular fa-heart mt-3 text-xl"></i>
                                    <% } else { %>
                                        <i onclick="like('<%= post._id %>', '<%= user._id %>')" id="like-<%= post._id %>" class="fa-regular fa-heart mt-3 text-xl"></i>
                                    <% } %>
                                    <span id="like-count-<%= post._id %>" class="mt-3 text-lg"><%= post.likeCount %></span> 
                                </div>
                            </div>
                        </div> 
                    <% }) %>
                </div>
            </div>
    </div>

    <script src="/javascripts/lightbox-plus-jquery.js"></script>

    <script>    

        async function like(postId, currentUser) {

            // Get the like button for the specific post
            let btn = document.getElementById("like-" + postId);

            // Get the like count element for the specific post
            let likeCountElement = document.getElementById('like-count-' + postId);

            try {
                var data = await fetchData(); // Fetch data asynchronously
                
            } catch (error) {
                // Handle errors
                console.error('Error:', error);
            }

            for(let i=0; i<data.length; i++){
                if(data[i]._id === postId){
                    // Get the current like count
                    var currentLikeCount = data[i].likeCount;
                    var index = i;
                    break;
                }
                
            }

            let newLikeCount;
            let value;

            if (data[index].likedUsers.length > 0 && data[index].likedUsers.includes(currentUser)) {
                    
                btn.classList.remove("fas");
                btn.classList.add("far");


                // Decrement the like count
                newLikeCount = currentLikeCount - 1;

                    
                // Update the like count display
                likeCountElement.innerText = newLikeCount;

                value = false;

                // Send updated like count to the backend route
                updateLikeCountInBackend(postId, newLikeCount, currentUser, value);
                    

                    
                // } 
            } 
            else {

                btn.classList.remove("far");
                btn.classList.add("fas");
            

                // Increment the like count
                newLikeCount = currentLikeCount + 1;

                
                // Update the like count display
                likeCountElement.innerText = newLikeCount;

                value = true;

                // Send updated like count to the backend route
                updateLikeCountInBackend(postId, newLikeCount, currentUser, value);

                
            }
        };

        async function updateLikeCountInBackend(postId, newLikeCount, currentUser, value) {
            try {
                const response = await fetch('/updatelikecount', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        postId: postId,
                        newLikeCount: newLikeCount,
                        currentUser: currentUser,
                        value: value
                    })
                });

                if (!response.ok) {
                    throw new Error('Failed to update like count');
                }

                const responseData = await response.json();
                console.log('Like count updated successfully for post:', postId);
            } catch (error) {
                console.error('Error updating like count:', error);
            }
        };

        async function fetchData() {
            try {
                const response = await fetch('/getdata'); // Assuming '/getdata' is the endpoint on your backend server
                const data = await response.json(); // Parse the response as JSON
                return data; // Return the fetched data
            } catch (error) {
                // Handle errors
                console.error('Error fetching data:', error);
                throw error; // Re-throw the error to be caught by the caller
            }
        }
    </script>

<% include ./partials/footer.ejs %>